<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title></title>
    <link>https://jorgenringen.github.io/</link>
    <description>Recent content on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 12 Dec 2017 19:04:34 +0100</lastBuildDate>
    
	<atom:link href="https://jorgenringen.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>About</title>
      <link>https://jorgenringen.github.io/about/</link>
      <pubDate>Tue, 12 Dec 2017 19:04:34 +0100</pubDate>
      
      <guid>https://jorgenringen.github.io/about/</guid>
      <description>Scribblings about topics such Java, Java EE, Spring, microservices, etc.</description>
    </item>
    
    <item>
      <title>JavaEE: Using JSR 310 in your DTO&#39;s with JAX-RS</title>
      <link>https://jorgenringen.github.io/blog/javaee-using-jsr-310-in-your-dtos-with-jax-rs/</link>
      <pubDate>Thu, 21 May 2015 00:00:00 +0000</pubDate>
      
      <guid>https://jorgenringen.github.io/blog/javaee-using-jsr-310-in-your-dtos-with-jax-rs/</guid>
      <description>With Java 8 came JSR310, a new and improved date and time API for Java. This post will show you how you can use types from JSR310 directly in JAX-RS s by only leveraging the Java EE api.
JavaEE dependency:
&amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;javax&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;javaee-api&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;7.0&amp;lt;/version&amp;gt; &amp;lt;scope&amp;gt;provided&amp;lt;/scope&amp;gt; &amp;lt;/dependency&amp;gt; Create a simple Person-class with a field, birthDate, of type java.time.LocalDate from JSR310:
public class Person { ... private LocalDate birthDate; ... } Lets say we wan&amp;rsquo;t to use the Person entity directly as an input parameter for a JAX-RS endpoint like this:</description>
    </item>
    
  </channel>
</rss>